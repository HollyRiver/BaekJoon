N, K = input().split()
A = list(map(int, input().split()))


## (0, 0) : x <= y이므로 무조건 K만큼 이동
## 해당 상황에서 x > y이므로, x를 1 증가 / y를 1 증가가 가능
## 1. 최대한 y=x에 만나지 않는 경우(2번만 만남) : 유일
## 2. 최대 t//K + 1번 만날 수 있음 : 

## 경로 탐색 알고리즘도 필요? -> 어차피 박스형인데 횟수만 곱하면 됨
## 브루트 포싱으로 되나? -> 절대 안됨, 몇억 단위로 나올텐데

## y=x와의 접점 선택 - t//K - 1개의 접점이 어디에 위치할 수 있는지를 판단
## 해당 접점에 대하여 몇 개의 루트가 존재하는지 확인
## 재귀 써야할듯, 존나어렵네

for t in range(K, N+1) :
    t//K